name: Update Branch Rules

on:
  workflow_dispatch:

jobs:
  update-rules:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install requests

    - name: Update branch protection rules
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      run: |
        import requests
        import os

        # Configuration
        GITHUB_API_URL = "https://api.github.com"
        ORG_NAME = "SwissWallet"
        TOKEN = os.getenv('GH_TOKEN')

        headers = {
            "Authorization": f"token {TOKEN}",
            "Accept": "application/vnd.github.v3+json",
        }

        def list_repos(org_name):
            url = f"{GITHUB_API_URL}/orgs/{org_name}/repos"
            response = requests.get(url, headers=headers)
            response.raise_for_status()
            return response.json()

        def update_branch_protection(repo_name, branch_name):
            url = f"{GITHUB_API_URL}/repos/{ORG_NAME}/{repo_name}/branches/{branch_name}/protection"
            data = {
                # "required_status_checks": {
                #     "strict": True,
                #     "contexts": ["ci/travis"]
                # },
                "enforce_admins": True,
                "required_pull_request_reviews": {
                    "required_approving_review_count": 2
                },
                "restrictions": None
            }
            response = requests.put(url, json=data, headers=headers)
            response.raise_for_status()
            print(f"Branch protection for '{branch_name}' updated in repository '{repo_name}'")

        def main():
            repos = list_repos(ORG_NAME)
            for repo in repos:
                repo_name = repo['name']
                update_branch_protection(repo_name, 'master')

        if __name__ == "__main__":
            main()